
0.3.0:

This version introduces some backwards-incompatable changes.  You will need to
recompile any compiled protocol definitions.

    * New serialising/deserialising infrastructure based on Cython.
        * the compiled version gives a speedup of over TODO on simple tests.
        * the parsing loop is now driven by the Stream, so Type.to_stream()
          and Type.from_stream() are gone.
        * the new methods Type._ep_parse() and  Type._ep_render() can be used
          by individual types to customise their rendering into primitive
          protocol types.
    * All extprot-related metadata is now stored in attributes or methods
      with the prefix "_ep_".  For example:
        * Type.convert() is now Type._ep_convert()
        * Type.default() is now Type._ep_default()
        * Type._types is now Type._ep_types
      This should mostly be invisible to end users, unless you were creating
      custom types or specifying Option types in raw code.
    * Added extprot.utils, with implementations of TypedList and TypedDict.

0.2.4:

    * implement promotion of primitive types to Union and Tuple types.

0.2.3:

    * fix data corruption when loading Bool fields

0.2.2:

    * let Message subclasses inherit Fields from their superclasses
    * bundle examples in the source distribution, allowing test suite
      to be run during deployment or installation

0.2.1:

    * improvements to types._TypedList class:
        * now easier to subclass and extend
        * fix bug in __contains__

0.2.0:

    * add ability to compile a .proto file to a .py file

0.1.1:

    * add Type.from_file and Message.to_file
    * allow Message instances to be pickled by serializing them
    * allow the Option constructor to provide default values
    * prevent Int fields from silently truncating other numeric types

0.1.0:

    * Initial release

